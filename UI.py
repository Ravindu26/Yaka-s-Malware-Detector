import sys
import os
from PyQt5.QtWidgets import QApplication, QMainWindow, QPushButton, QLabel, QFileDialog, QVBoxLayout, QWidget, QMessageBox
from PyQt5.QtCore import Qt
from PyQt5.QtGui import QIcon
import shutil

# Import the malware detection function from malware_detection.py
from test import extract_pe_information, detect_malware

class AntivirusUI(QMainWindow):
    def __init__(self):
        super().__init__()

        self.initUI()
        self.worker_thread = None  # Initialize worker thread as None

    def initUI(self):
        self.setWindowTitle("YAKA'S_MALWARE_DETECTOR")
        self.setGeometry(100, 100, 400, 200)

        # App icon
        icon_path = r'C:\Users\acer\Desktop\IW Project\Malware_Detector IW\icons\icon1.png'
        self.setWindowIcon(QIcon(icon_path))

        # Background Image
        background_image_path = r'C:\Users\acer\Desktop\IW Project\Malware_Detector IW\Background1.jpg'
        self.central_widget = QWidget(self)
        self.setCentralWidget(self.central_widget)
        self.central_widget.setStyleSheet(f'background-image: url("{background_image_path}"); background-repeat: no-repeat; background-position: center; background-size: cover;')

        self.layout = QVBoxLayout()

        self.scan_button = QPushButton("Let's start the scan", self)
        self.scan_button.clicked.connect(self.scan_file)
        self.scan_button.setStyleSheet("background-color: #4CAF50; color: white; font-size: 20px; border-radius: 10px; padding: 10px;")

        # Center the button horizontally using a layout
        button_layout = QVBoxLayout()
        button_layout.addWidget(self.scan_button)
        button_layout.addStretch(1)

        self.result_label = QLabel("", self)
        self.result_label.setAlignment(Qt.AlignCenter)

        self.layout.addLayout(button_layout)
        self.layout.addWidget(self.result_label)

        self.central_widget.setLayout(self.layout)

    def scan_file(self):
        if self.worker_thread and self.worker_thread.isRunning():
            return  # Don't start a new scan if the previous one is running

        file_path, _ = QFileDialog.getOpenFileName(self, "Open File", "", "All Files (*);;PE Files (*.exe)")

        if file_path:
            extracted_features = extract_pe_information(file_path)
            prediction = detect_malware(extracted_features)

            if prediction == 1:
                # Display a confirmation message
                reply = QMessageBox.question(self, 'Malware Detected', 'Malware Detected. Do you want to delete this file?', QMessageBox.Yes | QMessageBox.No)
                if reply == QMessageBox.Yes:
                    if self.delete_file(file_path):
                        self.result_label.setText("File deleted. You are now safe.")
                    else:
                        self.result_label.setText("Failed to delete the file.")
                else:
                    self.result_label.setText("You have been at risk.")
            else:
                self.result_label.setText("No Malware Detected")

    def delete_file(self, file_path):
        try:
            os.remove(file_path)
            return True
        except Exception as e:
            print("Error during file deletion:", e)
            return False

if __name__ == "__main__":
    app = QApplication(sys.argv)
    window = AntivirusUI()
    window.show()
    sys.exit(app.exec_())
